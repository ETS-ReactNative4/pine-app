// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MnemonicScreen renders correctly 1`] = `
<View
  hideHeader={true}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flex": 1,
        "justifyContent": "center",
        "padding": 40,
      },
      undefined,
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    numberOfLines={undefined}
    style={
      Array [
        Object {
          "color": "#000000",
          "fontFamily": "System",
          "fontWeight": "400",
        },
        Array [
          Object {
            "color": "#AAAAAA",
            "fontSize": 15,
            "fontWeight": "400",
            "letterSpacing": -0.24,
            "lineHeight": 21,
            "marginBottom": 20,
          },
          Object {
            "position": "absolute",
            "textAlign": "center",
            "top": 85,
          },
        ],
      ]
    }
  >
    Write down and store this recovery key in a safe place so you can recover your wallet if you would lose or break your phone.
  </Text>
  <MnemonicWordsContainer
    phrase="during bulb nominee acquire paddle next course stable govern eagle title wing"
    style={
      Object {
        "marginBottom": 10,
        "marginTop": 10,
      }
    }
  />
  <View
    pointerEvents={undefined}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#ffffff",
          "bottom": 30,
          "left": 40,
          "position": "absolute",
          "right": 40,
        },
        undefined,
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFD23F",
              "borderRadius": 25,
              "height": 50,
              "justifyContent": "center",
              "width": 670,
            },
            undefined,
          ]
        }
      >
        <ActivityIndicator
          animating={false}
          color="#FFFFFF"
          hidesWhenStopped={true}
          size="small"
          style={
            Object {
              "height": 12,
              "position": "absolute",
            }
          }
        />
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "white",
                "fontFamily": "System",
                "fontSize": 16,
                "fontWeight": "600",
                "letterSpacing": -0.41,
              },
              undefined,
              Object {
                "opacity": 1,
              },
            ]
          }
        >
          I have saved these words
        </Text>
      </View>
    </View>
  </View>
  <ErrorModalContainer />
</View>
`;
